// 1
// Напиши функцию, которая принимает 1 параметр. При первом вызове, она его запоминает, при втором - суммирует переданый параметр с тем, что передали первый раз и тд. Запрещается использовать глобальные переменные как хранилище результатов счетчика.

let adder = () => {
  let result = 0; 
  return (x) => { 
    result += x; 
    return result; 
  } 
} 

let summer = adder();

// 2
// Создать функцию которая будет возвращать массив в котором будут лежать все значения - аргументы переданные в данную функцию. Но если мы ничего не передадим в параметрах, то массив очистится. Запрещается использовать глобальные переменные как хранилище значений.

let massiv = () =>  {
  result = [];
  return (a) => { if (a == undefined) {
    return result = [];
  } else {
    result.push(a);
    return result;
  }
  } 
}

let getUpdatedArr = massiv();

// 3*
// Содать функцию , которая при каждом вызове будет показывать разницу в секундах между временем когда ее вызывали последний раз и теперешним. Вызываем первый раз, то ретерним строку 'Enabled'. Запрещается использовать глобальные переменные как хранилище значений. 

let difTime = () => {
  let data = 0;
    return () => {
      if (data === 0) {
        return 'Enabled'
      } else {
      data2 = new Date().getSeconds();
      data = data2 - data;
      return data;
      }
    }
}

let getsTime = difTime(); 